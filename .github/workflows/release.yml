name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Perl
        run: |
          sudo apt-get update
          sudo apt-get install -y perl zip

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release archives
        run: |
          perl scripts/release --version=${{ steps.version.outputs.VERSION }}

      - name: Upload tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: omni-${{ steps.version.outputs.VERSION }}-tar
          path: releases/omni-${{ steps.version.outputs.VERSION }}.tar.gz

      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: omni-${{ steps.version.outputs.VERSION }}-zip
          path: releases/omni-${{ steps.version.outputs.VERSION }}.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases

      - name: Move artifacts to correct location
        run: |
          mkdir -p final-releases
          find releases -name "*.tar.gz" -o -name "*.zip" | xargs -I {} mv {} final-releases/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Omni ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            final-releases/omni-${{ steps.version.outputs.VERSION }}.tar.gz
            final-releases/omni-${{ steps.version.outputs.VERSION }}.zip
          body: |
            # Omni ${{ steps.version.outputs.VERSION }}

            A flexible Go logging library with multiple destination backends.

            ## Downloads

            - [omni-${{ steps.version.outputs.VERSION }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/omni-${{ steps.version.outputs.VERSION }}.tar.gz)
            - [omni-${{ steps.version.outputs.VERSION }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/omni-${{ steps.version.outputs.VERSION }}.zip)

            ## Installation

            Add to your Go module:

            ```bash
            go get github.com/wayneeseguin/omni@${{ steps.version.outputs.VERSION }}
            ```

            Or download and extract the source:

            ```bash
            # Using tar.gz
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/omni-${{ steps.version.outputs.VERSION }}.tar.gz -o omni.tar.gz
            tar -xzf omni.tar.gz

            # Using zip
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/omni-${{ steps.version.outputs.VERSION }}.zip -o omni.zip
            unzip omni.zip
            ```

            ## What's Changed

            See the [changelog](https://github.com/${{ github.repository }}/compare/...${{ steps.version.outputs.VERSION }}) for details.
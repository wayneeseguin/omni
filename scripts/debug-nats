#!/bin/bash

# Script to debug NATS integration tests
set -e

echo "=== NATS Integration Test Debugger ==="
echo

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}Error: Docker is not running${NC}"
    exit 1
fi

# Check if NATS container is running
if docker ps | grep -q omni-test-nats; then
    echo -e "${GREEN}NATS container is already running${NC}"
    CONTAINER_RUNNING=true
else
    echo -e "${YELLOW}NATS container is not running${NC}"
    CONTAINER_RUNNING=false
fi

# Function to start NATS container
start_nats() {
    echo "Starting NATS container..."
    docker run -d --name omni-test-nats -p 4222:4222 nats:latest -DV
    sleep 2
    echo -e "${GREEN}NATS container started${NC}"
}

# Function to show NATS logs
show_logs() {
    echo
    echo "=== NATS Container Logs ==="
    docker logs --tail 50 omni-test-nats
}

# Function to test NATS connectivity
test_connectivity() {
    echo
    echo "=== Testing NATS Connectivity ==="
    
    # Check if nc (netcat) is available
    if command -v nc > /dev/null 2>&1; then
        echo -n "Testing TCP connection to localhost:4222... "
        if nc -zv localhost 4222 2>&1 | grep -q succeeded; then
            echo -e "${GREEN}SUCCESS${NC}"
        else
            echo -e "${RED}FAILED${NC}"
        fi
    else
        echo -e "${YELLOW}netcat not available, skipping TCP test${NC}"
    fi
    
    # Check with curl if available
    if command -v curl > /dev/null 2>&1; then
        echo -n "Testing NATS monitoring endpoint... "
        if curl -s http://localhost:8222/varz > /dev/null 2>&1; then
            echo -e "${GREEN}Monitoring available at http://localhost:8222${NC}"
        else
            echo -e "${YELLOW}Monitoring endpoint not available${NC}"
        fi
    fi
}

# Function to run debug tests
run_debug_tests() {
    echo
    echo "=== Running Debug Tests ==="
    cd "$(dirname "$0")/.."
    go test -v -tags="integration,debug" -run TestNATS.*Debug ./examples/plugins/nats-backend/...
}

# Function to run specific test with extra verbosity
run_specific_test() {
    local test_name=$1
    echo
    echo "=== Running Specific Test: $test_name ==="
    cd "$(dirname "$0")/.."
    VERBOSE=1 go test -v -tags=integration -run "^${test_name}$" ./examples/plugins/nats-backend/...
}

# Function to monitor NATS in real-time
monitor_nats() {
    echo
    echo "=== Monitoring NATS Container (Ctrl+C to stop) ==="
    docker logs -f omni-test-nats
}

# Main menu
case "${1:-}" in
    start)
        if [ "$CONTAINER_RUNNING" = true ]; then
            echo -e "${YELLOW}NATS container is already running${NC}"
        else
            start_nats
        fi
        test_connectivity
        ;;
    
    stop)
        echo "Stopping NATS container..."
        docker stop omni-test-nats 2>/dev/null || true
        docker rm omni-test-nats 2>/dev/null || true
        echo -e "${GREEN}NATS container stopped${NC}"
        ;;
    
    restart)
        $0 stop
        sleep 1
        $0 start
        ;;
    
    logs)
        if [ "$CONTAINER_RUNNING" = true ]; then
            show_logs
        else
            echo -e "${RED}NATS container is not running${NC}"
        fi
        ;;
    
    monitor)
        if [ "$CONTAINER_RUNNING" = true ]; then
            monitor_nats
        else
            echo -e "${RED}NATS container is not running${NC}"
        fi
        ;;
    
    test)
        if [ "$CONTAINER_RUNNING" = false ]; then
            start_nats
        fi
        test_connectivity
        if [ -n "${2:-}" ]; then
            run_specific_test "$2"
        else
            echo
            echo "Running all NATS integration tests..."
            cd "$(dirname "$0")/.."
            go test -v -tags=integration ./examples/plugins/nats-backend/...
        fi
        ;;
    
    debug)
        if [ "$CONTAINER_RUNNING" = false ]; then
            start_nats
        fi
        test_connectivity
        run_debug_tests
        ;;
    
    shell)
        if [ "$CONTAINER_RUNNING" = true ]; then
            echo "Entering NATS container shell..."
            docker exec -it omni-test-nats /bin/sh
        else
            echo -e "${RED}NATS container is not running${NC}"
        fi
        ;;
    
    status)
        echo "=== NATS Integration Test Status ==="
        echo
        if [ "$CONTAINER_RUNNING" = true ]; then
            echo -e "Container: ${GREEN}Running${NC}"
            echo -n "Container ID: "
            docker ps -q -f name=omni-test-nats
            echo
            docker ps -f name=omni-test-nats --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
        else
            echo -e "Container: ${RED}Not running${NC}"
        fi
        test_connectivity
        ;;
    
    *)
        echo "Usage: $0 {start|stop|restart|logs|monitor|test [test_name]|debug|shell|status}"
        echo
        echo "Commands:"
        echo "  start    - Start NATS container"
        echo "  stop     - Stop NATS container"
        echo "  restart  - Restart NATS container"
        echo "  logs     - Show recent container logs"
        echo "  monitor  - Monitor container logs in real-time"
        echo "  test     - Run integration tests (optionally specify test name)"
        echo "  debug    - Run debug tests with extra logging"
        echo "  shell    - Enter container shell"
        echo "  status   - Show current status"
        echo
        echo "Examples:"
        echo "  $0 start"
        echo "  $0 test"
        echo "  $0 test TestNATSBackendIntegration"
        echo "  $0 debug"
        exit 1
        ;;
esac